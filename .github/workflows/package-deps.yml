name: package dependencies

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  # Split release/upload workflow adapted from:
  # https://github.com/actions/create-release/issues/14#issuecomment-555379810
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    # Save release_url for package-deps job
    - name: Output Release URL File
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
    - name: Save Release URL File for publish
      uses: actions/upload-artifact@v1
      with:
        name: release_url
        path: release_url.txt
  package-deps:
    name: Package and upload dependencies
    needs: [release]
    strategy:
      matrix:
        os:
          - windows-2019
          - ubuntu-20.04
          - macos-11.0
        python-version: [3.8]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .
          mkdir ${{ matrix.os }}-deps/
          cd ${{ matrix.os }}-deps/
          pip freeze | grep -v commcare-utilities > requirements.txt
          pip download -r requirements.txt
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Zip dependencies
        if: "!contains(matrix.os, 'windows')"
        run: |
          zip -r ${{ matrix.os }}-${{ steps.get_version.outputs.VERSION }}-deps.zip ${{ matrix.os }}-deps/
      - name: Zip dependencies
        if: contains(matrix.os, 'windows')
        run: |
          powershell Compress-Archive ${{ matrix.os }}-deps/ ${{ matrix.os }}-${{ steps.get_version.outputs.VERSION }}-deps.zip
      - name: Load Release URL File from release job
        uses: actions/download-artifact@v1
        with:
          name: release_url
      - name: Get Upload URL
        id: get_release_info
        run: |
          echo "::set-output name=upload_url::$(cat release_url/release_url.txt)"
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ${{ matrix.os }}-deps.zip
          asset_name: ${{ matrix.os }}-deps.zip
          asset_content_type: application/zip
